{"name": "test_place_market_buy_order_with_sl_tp", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcases.test_market_order.TestMarketOrder object at 0x00000200C1F06390>\n\n    def test_place_market_buy_order_with_sl_tp(self):\n        trading_home_page = TradingHomePage(self.driver)\n        trading_home_page.click_buy_button()\n        trading_home_page.click_order_type_dropdown_and_select(\"market\")\n        trading_home_page.input_size(config.SIZE)\n        ask_price = trading_home_page.get_ask_price()\n        sl_price = ask_price - config.SL\n        tp_price = ask_price + config.TP\n        trading_home_page.input_sl_price(sl_price)\n        trading_home_page.input_tp_price(tp_price)\n        trading_home_page.click_trade_button()\n        trading_home_page.click_confirm_button()\n        trading_home_page.validate_placed_details_with_notification(config.SYMBOL, \"BUY\", \"market\", config.SIZE, sl_price, tp_price)\n>       trading_home_page.validate_placed_details_with_table_detail(\"BUY\", config.SIZE, ask_price, tp_price, sl_price)\n\ntestcases\\test_market_order.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.trading_home_page.TradingHomePage object at 0x00000200C1F33050>\norder_action = 'BUY', size = 0.05, entry_price = 105391.0, tp = 106391.0\nsl = 104391.0\n\n    def validate_placed_details_with_table_detail(self, order_action, size, entry_price, tp, sl):\n        time.sleep(5)\n        expected_open_date = datetime.now().date().strftime(\"%Y-%m-%d\")\n        actual_open_date = self.get_open_date()\n        actual_open_type = self.get_open_type()\n        actual_open_size = self.get_open_size()\n        actual_open_unit = self.get_open_unit()\n        actual_entry_price = self.get_entry_price()\n        actual_take_profit = self.get_take_profit()\n        actual_stop_loss = self.get_stop_loss()\n    \n        assert expected_open_date in actual_open_date\n        assert actual_open_type == order_action\n        assert actual_open_size == size\n        assert actual_open_unit == size\n>       assert actual_entry_price == entry_price\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\npages\\trading_home_page.py:220: AssertionError"}, "start": 1749974537942, "stop": 1749974546171, "uuid": "14ddad4b-e0ce-4591-b38f-2fd63d73371b", "historyId": "120355726253bd8732955e84810856b7", "testCaseId": "120355726253bd8732955e84810856b7", "fullName": "testcases.test_market_order.TestMarketOrder#test_place_market_buy_order_with_sl_tp", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_market_order"}, {"name": "subSuite", "value": "TestMarketOrder"}, {"name": "host", "value": "DESKTOP-36P47OC"}, {"name": "thread", "value": "8176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_market_order"}]}