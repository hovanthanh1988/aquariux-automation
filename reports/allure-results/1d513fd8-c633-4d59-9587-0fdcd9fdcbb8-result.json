{"name": "test_close_partial_open_position", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0xf03783+63299]\n\tGetHandleVerifier [0x0xf037c4+63364]\n\t(No symbol) [0x0xd31113]\n\t(No symbol) [0x0xd7987e]\n\t(No symbol) [0x0xd79c1b]\n\t(No symbol) [0x0xdc2212]\n\t(No symbol) [0x0xd9e5c4]\n\t(No symbol) [0x0xdbfa4a]\n\t(No symbol) [0x0xd9e376]\n\t(No symbol) [0x0xd6d6e0]\n\t(No symbol) [0x0xd6e544]\n\tGetHandleVerifier [0x0x115e073+2531379]\n\tGetHandleVerifier [0x0x1159372+2511666]\n\tGetHandleVerifier [0x0xf29efa+220858]\n\tGetHandleVerifier [0x0xf1a548+156936]\n\tGetHandleVerifier [0x0xf20c7d+183357]\n\tGetHandleVerifier [0x0xf0b6e8+95912]\n\tGetHandleVerifier [0x0xf0b890+96336]\n\tGetHandleVerifier [0x0xef666a+9770]\n\tBaseThreadInitThunk [0x0x767dfa29+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x778e7a9e+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x778e7a6e+238]", "trace": "request = <SubRequest 'login' for <Function test_close_partial_open_position>>\n\n    @fixture(scope=\"function\")\n    def login(request):\n        driver = request.cls.driver\n        trade_page = TradePage(driver)\n        login_page = LogIn(driver)\n        trading_home_page = TradingHomePage(driver)\n        driver.get(config.BASE_URL)\n        trade_page.click_start_demo_button()\n>       trade_page.click_login_button()\n\nconftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\trade_page.py:32: in click_login_button\n    self.click_element((By.XPATH, self._login_button_locator))\npages\\base_page.py:11: in click_element\n    return WebDriverWait(self.driver, timeout).until(ec.element_to_be_clickable(locator)).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7c209fcea3e6936248fe62f56b841f5c\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001B938B54540>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0xf03783+63299]\nE       \tGetHandleVerifier [0x0xf037c4+63364]\nE       \t(No symbol) [0x0xd31113]\nE       \t(No symbol) [0x0xd7987e]\nE       \t(No symbol) [0x0xd79c1b]\nE       \t(No symbol) [0x0xdc2212]\nE       \t(No symbol) [0x0xd9e5c4]\nE       \t(No symbol) [0x0xdbfa4a]\nE       \t(No symbol) [0x0xd9e376]\nE       \t(No symbol) [0x0xd6d6e0]\nE       \t(No symbol) [0x0xd6e544]\nE       \tGetHandleVerifier [0x0x115e073+2531379]\nE       \tGetHandleVerifier [0x0x1159372+2511666]\nE       \tGetHandleVerifier [0x0xf29efa+220858]\nE       \tGetHandleVerifier [0x0xf1a548+156936]\nE       \tGetHandleVerifier [0x0xf20c7d+183357]\nE       \tGetHandleVerifier [0x0xf0b6e8+95912]\nE       \tGetHandleVerifier [0x0xf0b890+96336]\nE       \tGetHandleVerifier [0x0xef666a+9770]\nE       \tBaseThreadInitThunk [0x0x767dfa29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x778e7a9e+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x778e7a6e+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "start": 1750027675372, "stop": 1750027675372, "uuid": "66f99630-87d8-496b-bf3d-c2fe482383ec", "historyId": "2fbf06fe28634b05b16abe3e8fb3ccf6", "testCaseId": "2fbf06fe28634b05b16abe3e8fb3ccf6", "fullName": "testcases.test_market_order.TestMarketOrder#test_close_partial_open_position", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_market_order"}, {"name": "subSuite", "value": "TestMarketOrder"}, {"name": "host", "value": "DESKTOP-36P47OC"}, {"name": "thread", "value": "24888-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_market_order"}]}