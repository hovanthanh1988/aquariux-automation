{"name": "test_edit_pending_order_all_fields", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x1163783+63299]\n\tGetHandleVerifier [0x0x11637c4+63364]\n\t(No symbol) [0x0xf91113]\n\t(No symbol) [0x0xfd987e]\n\t(No symbol) [0x0xfd9c1b]\n\t(No symbol) [0x0x1022212]\n\t(No symbol) [0x0xffe5c4]\n\t(No symbol) [0x0x101fa4a]\n\t(No symbol) [0x0xffe376]\n\t(No symbol) [0x0xfcd6e0]\n\t(No symbol) [0x0xfce544]\n\tGetHandleVerifier [0x0x13be073+2531379]\n\tGetHandleVerifier [0x0x13b9372+2511666]\n\tGetHandleVerifier [0x0x1189efa+220858]\n\tGetHandleVerifier [0x0x117a548+156936]\n\tGetHandleVerifier [0x0x1180c7d+183357]\n\tGetHandleVerifier [0x0x116b6e8+95912]\n\tGetHandleVerifier [0x0x116b890+96336]\n\tGetHandleVerifier [0x0x115666a+9770]\n\tBaseThreadInitThunk [0x0x767dfa29+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x778e7a9e+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x778e7a6e+238]", "trace": "self = <testcases.test_peding_order.TestPendingOrder object at 0x0000017785604BD0>\n\n    def test_edit_pending_order_all_fields(self):\n        trading_home_page = TradingHomePage(self.driver)\n        ask_price = trading_home_page.get_ask_price()\n        price_limit = ask_price - 1000\n        sl_price = price_limit - config.SL\n        tp_price = price_limit + config.TP\n    \n        trading_home_page.click_buy_button()\n        trading_home_page.click_order_type_dropdown_and_select(\"Limit\")\n        trading_home_page.input_size(config.SIZE)\n        trading_home_page.input_price_limit(price_limit)\n        trading_home_page.input_sl_price(sl_price)\n        trading_home_page.input_tp_price(tp_price)\n        trading_home_page.click_expiry_type_dropdown_and_select(\"good-till-cancelled\")\n        sl_price_formatted = format(sl_price, \",\")\n        trading_home_page.click_trade_button()\n        trading_home_page.click_confirm_button()\n    \n        trading_home_page.click_pending_order_tab()\n    \n        new_sl = sl_price + 500\n        new_tp = tp_price - 500\n        new_entry_price = price_limit + 200\n        new_expiry_type = \"good-till-day\"\n    \n        trading_home_page.click_edit_pending_order_button(sl_price_formatted)\n        trading_home_page.update_pending_order_price(str(new_entry_price))\n        trading_home_page.update_pending_order_sl_price(str(new_sl))\n        trading_home_page.update_pending_order_tp_price(new_tp)\n        trading_home_page.update_expiry_pending_order_and_select(new_expiry_type)\n        trading_home_page.click_update_order_button()\n        trading_home_page.click_edit_confirmation_confirm_button()\n    \n        sl_new_formatted = format(new_sl, \",\")\n>       trading_home_page.validate_placed_details_on_pending_order_table(\"BUY LIMIT\", config.SIZE, new_entry_price, new_tp,\n                                                                 sl_new_formatted, \"Good Till Day\")\n\ntestcases\\test_peding_order.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\trading_home_page.py:420: in validate_placed_details_on_pending_order_table\n    actual_pending_order_date = self.get_pending_order_date(sl)\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\trading_home_page.py:168: in get_pending_order_date\n    pending_order_date = self.find_element((By.XPATH, self._pending_order_date_locator.format(f\"'{sl}'\"))).text\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\base_page.py:14: in find_element\n    return WebDriverWait(self.driver, timeout).until(ec.presence_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b368697ed6cf8e0cbebcfef629091183\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000177855EEDE0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x1163783+63299]\nE       \tGetHandleVerifier [0x0x11637c4+63364]\nE       \t(No symbol) [0x0xf91113]\nE       \t(No symbol) [0x0xfd987e]\nE       \t(No symbol) [0x0xfd9c1b]\nE       \t(No symbol) [0x0x1022212]\nE       \t(No symbol) [0x0xffe5c4]\nE       \t(No symbol) [0x0x101fa4a]\nE       \t(No symbol) [0x0xffe376]\nE       \t(No symbol) [0x0xfcd6e0]\nE       \t(No symbol) [0x0xfce544]\nE       \tGetHandleVerifier [0x0x13be073+2531379]\nE       \tGetHandleVerifier [0x0x13b9372+2511666]\nE       \tGetHandleVerifier [0x0x1189efa+220858]\nE       \tGetHandleVerifier [0x0x117a548+156936]\nE       \tGetHandleVerifier [0x0x1180c7d+183357]\nE       \tGetHandleVerifier [0x0x116b6e8+95912]\nE       \tGetHandleVerifier [0x0x116b890+96336]\nE       \tGetHandleVerifier [0x0x115666a+9770]\nE       \tBaseThreadInitThunk [0x0x767dfa29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x778e7a9e+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x778e7a6e+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "start": 1750005952534, "stop": 1750027044752, "uuid": "14cf2afd-faa2-4377-869e-1e8950894777", "historyId": "6647806c98e69e0c0d39a5c23c2697f8", "testCaseId": "6647806c98e69e0c0d39a5c23c2697f8", "fullName": "testcases.test_peding_order.TestPendingOrder#test_edit_pending_order_all_fields", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_peding_order"}, {"name": "subSuite", "value": "TestPendingOrder"}, {"name": "host", "value": "DESKTOP-36P47OC"}, {"name": "thread", "value": "23840-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_peding_order"}]}